worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile      on;
    keepalive_timeout 65;

    lua_shared_dict domains 10m;
    lua_shared_dict auto_ssl 64m;
    lua_shared_dict auto_ssl_settings 64k;

    init_worker_by_lua_file /etc/nginx/lua/domain_loader.lua;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    server {
        listen 80 default_server;
        server_name _;

        location ^~ /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location /api/add-domain {
            content_by_lua_file /etc/nginx/lua/api_add_domain.lua;
        }

        location / {
            set $upstream "";
            access_by_lua_file /etc/nginx/lua/router.lua;

            proxy_pass http://$upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    server {
        listen 443 ssl;
        server_name ~^(?<subdomain>.+)\.isipage\.com$;

        ssl_certificate     /etc/nginx/ssl/isipage.crt;
        ssl_certificate_key /etc/nginx/ssl/isipage.key;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
            proxy_pass http://103.250.11.31:2000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    server {
        listen 443 ssl;
        server_name _;

        ssl_certificate_by_lua_block {
            local ssl = require("ngx.ssl")
            local domain = ngx.var.host
            local cert_path = "/etc/letsencrypt/live/" .. domain .. "/fullchain.pem"
            local key_path  = "/etc/letsencrypt/live/" .. domain .. "/privkey.pem"

            local fc = io.open(cert_path, "r")
            local fk = io.open(key_path, "r")
            if not fc or not fk then
                ngx.log(ngx.ERR, "‚ùå SSL not found for ", domain)
                return ngx.exit(ngx.ERROR)
            end

            local cert = fc:read("*a")
            local key = fk:read("*a")
            fc:close(); fk:close()

            ssl.clear_certs()
            assert(ssl.set_der_cert(ssl.cert_pem_to_der(cert)))
            assert(ssl.set_der_priv_key(ssl.priv_key_pem_to_der(key)))
        }

        location / {
            set $upstream "";
            access_by_lua_file /etc/nginx/lua/router.lua;

            proxy_pass http://$upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # üîí Auto SSL untuk semua domain yang sudah didaftarkan (selain *.isipage.com)
    server {
        listen 443 ssl;
        server_name _;

        ssl_certificate_by_lua_block {
            require("resty.auto-ssl").ssl_certificate()
        }

        ssl_certificate     /etc/nginx/ssl/dummy.crt;
        ssl_certificate_key /etc/nginx/ssl/dummy.key;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        location / {
            set $upstream "";
            access_by_lua_file /etc/nginx/lua/router.lua;

            proxy_pass http://$upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api/add-domain {
            content_by_lua_file /etc/nginx/lua/api_add_domain.lua;
        }
    }
}
