worker_processes  1;

events { worker_connections 1024; }

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile      on;
    keepalive_timeout 65;

    lua_shared_dict domains 10m;

    init_worker_by_lua_file /etc/nginx/lua/domain_loader.lua;

    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log;

    # --- PORT 80 default (ACME + API + router dinamis) ---
    server {
        listen 80 default_server;
        server_name _ localhost;

        # ACME webroot (HARUS di HTTP)
        location ^~ /.well-known/acme-challenge/ {
            root /var/www/certbot;
            allow all;
            try_files $uri =404;
        }

        # Endpoint tambah domain (Lua)
        location /api/add-domain {
            content_by_lua_file /etc/nginx/lua/api_add_domain.lua;
        }

        # Optional: hilangkan noise favicon 404
        location = /favicon.ico { return 204; }

        # Router dinamis
        location / {
            set $upstream "";
            access_by_lua_file /etc/nginx/lua/router.lua;

            proxy_pass http://$upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # --- PORT 80 untuk *.isipage.com (BIAR http://sub.isipage.com juga nembus) ---
    server {
        listen 80;
        server_name ~^(?<subdomain>.+)\.isipage\.com$;

        # Bisa pilih: proxy langsung atau redirect ke HTTPS
        # PROXY langsung:
        location / {
            proxy_pass http://103.250.11.31:2000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # (Alternatif redirect HTTPS, kalau mau)
        # location / { return 301 https://$host$request_uri; }
    }

    # --- SSL statis untuk *.isipage.com (PASTIKAN file ada) ---
    server {
        listen 443 ssl http2;
        server_name ~^(?<subdomain>.+)\.isipage\.com$;

        ssl_certificate     /etc/nginx/ssl/isipage.crt;
        ssl_certificate_key /etc/nginx/ssl/isipage.key;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
            proxy_pass http://103.250.11.31:2000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # --- SSL dinamis (fallback dummy jika cert belum ada, JANGAN abort) ---
    server {
        listen 443 ssl http2;
        server_name _;

        # Dummy default; kalau cert ditemukan di bawah, akan dioverride
        ssl_certificate     /etc/nginx/ssl/dummy.crt;
        ssl_certificate_key /etc/nginx/ssl/dummy.key;

        ssl_certificate_by_lua_block {
            local ssl = require("ngx.ssl")
            local domain = ssl.server_name()
            if not domain or domain == "" then
                ngx.log(ngx.WARN, "No SNI; using dummy cert")
                return
            end
            local cert_path = "/var/lib/certbot/live/" .. domain .. "/fullchain.pem"
            local key_path  = "/var/lib/certbot/live/" .. domain .. "/privkey.pem"

            local fc = io.open(cert_path, "r")
            local fk = io.open(key_path, "r")
            if not fc or not fk then
                ngx.log(ngx.WARN, "SSL not found for " .. domain .. "; using dummy cert")
                return
            end

            local cert = fc:read("*a"); fc:close()
            local key  = fk:read("*a"); fk:close()

            assert(ssl.clear_certs())
            assert(ssl.set_der_cert(ssl.cert_pem_to_der(cert)))
            assert(ssl.set_der_priv_key(ssl.priv_key_pem_to_der(key)))
        }

        location / {
            set $upstream "";
            access_by_lua_file /etc/nginx/lua/router.lua;

            proxy_pass http://$upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
