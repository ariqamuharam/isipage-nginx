worker_processes  1;

events { worker_connections 1024; }

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile      on;
    keepalive_timeout 65;
    # Cache untuk domains.json
    lua_shared_dict domains_cache 10m;

    init_worker_by_lua_file /etc/nginx/lua/domain_loader.lua;

    # ===== Port 80 (Default) =====
    server {
        listen 80 default_server;
        server_name _ localhost;

        # ACME webroot (HTTP only)
        location ^~ /.well-known/acme-challenge/ {
            root /var/www/certbot;
            allow all;
            try_files $uri =404;
        }

        # API tambah domain (Lua)
        location /api/add-domain {
            content_by_lua_file /etc/nginx/lua/api_add_domain.lua;
        }


        location / {
            # Dynamic router HTTP (untuk domain non-*.isipage.com)
            set $upstream "";
            access_by_lua_file /etc/nginx/lua/router.lua;
            proxy_pass http://$upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # ===== Port 80 untuk *.isipage.com (boleh redirect atau langsung proxy) =====
    server {
        listen 80;
        server_name ~^(?<subdomain>.+)\.isipage\.com$;

        # (opsional) ACME webroot kalau suatu saat mau LE untuk subdomain statis
        location ^~ /.well-known/acme-challenge/ {
            root /var/www/certbot;
            allow all;
            try_files $uri =404;
        }

        # Pilih salah satu:
        # return 301 https://$host$request_uri;   # redirect ke HTTPS
        # ATAU langsung proxy ke :2000
        location / {
            proxy_pass http://103.250.11.31:2000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # ===== Port 443 untuk *.isipage.com (SSL statis dari file kamu) =====
    server {
        listen 443 ssl;
        http2 on;
        server_name ~^(?<subdomain>.+)\.isipage\.com$;

        ssl_certificate     /etc/nginx/ssl/isipage.crt;
        ssl_certificate_key /etc/nginx/ssl/isipage.key;

        location / {
            proxy_pass http://103.250.11.31:2000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # ===== Port 443 Dinamis (domain lain, Certbot webroot) =====
    server {
        listen 443 ssl;
        http2 on;
        server_name _;  # tangkap semua selain *.isipage.com

        # Fallback dummy cert; real cert dipasang via ssl_certificate_by_lua_block
        ssl_certificate     /etc/nginx/ssl/dummy.crt;
        ssl_certificate_key /etc/nginx/ssl/dummy.key;

        ssl_certificate_by_lua_block {
            local ssl = require("ngx.ssl")
            local domain = ssl.server_name()
            if not domain or domain == "" then
                ngx.log(ngx.WARN, "No SNI; using dummy cert")
                return
            end
            local cert_path = "/var/lib/certbot/live/" .. domain .. "/fullchain.pem"
            local key_path  = "/var/lib/certbot/live/" .. domain .. "/privkey.pem"

            local fc = io.open(cert_path, "r")
            local fk = io.open(key_path, "r")
            if not fc or not fk then
                ngx.log(ngx.WARN, "SSL not found for " .. domain .. "; using dummy cert")
                return
            end

            local cert = fc:read("*a"); fc:close()
            local key  = fk:read("*a"); fk:close()

            assert(ssl.clear_certs())
            assert(ssl.set_der_cert(ssl.cert_pem_to_der(cert)))
            assert(ssl.set_der_priv_key(ssl.priv_key_pem_to_der(key)))
        }


        location / {
            # Dynamic router HTTPS
            set $upstream "";
            access_by_lua_file /etc/nginx/lua/router.lua;
            proxy_pass http://$upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
